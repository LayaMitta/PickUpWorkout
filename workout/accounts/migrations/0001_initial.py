# Generated by Django 3.2 on 2021-06-12 17:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_trainer', models.BooleanField(default=False)),
                ('is_member', models.BooleanField(default=False)),
                ('is_dietician', models.BooleanField(default=False)),
                ('age', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(70)])),
                ('gender', models.CharField(default='M', max_length=255)),
                ('workout', models.CharField(default='None', max_length=255)),
                ('phone', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dietician',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.myuser')),
                ('experience', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(50)])),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('fees', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999999999)])),
                ('category', models.CharField(default='None', max_length=255)),
                ('available', models.CharField(default='1pm-2pm', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.myuser')),
                ('health_issues', models.CharField(default='None', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.myuser')),
                ('t5', models.CharField(default=0, max_length=255)),
                ('t6', models.CharField(default=0, max_length=255)),
                ('t7', models.CharField(default=0, max_length=255)),
                ('t8', models.CharField(default=0, max_length=255)),
                ('t9', models.CharField(default=0, max_length=255)),
                ('t10', models.CharField(default=0, max_length=255)),
                ('t11', models.CharField(default=0, max_length=255)),
                ('t12', models.CharField(default=0, max_length=255)),
                ('t13', models.CharField(default=0, max_length=255)),
                ('t14', models.CharField(default=0, max_length=255)),
                ('t15', models.CharField(default=0, max_length=255)),
                ('t16', models.CharField(default=0, max_length=255)),
                ('t17', models.CharField(default=0, max_length=255)),
                ('t18', models.CharField(default=0, max_length=255)),
                ('t19', models.CharField(default=0, max_length=255)),
                ('t20', models.CharField(default=0, max_length=255)),
                ('t21', models.CharField(default=0, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.myuser')),
                ('experience', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(50)])),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10)])),
                ('fees', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999999999)])),
                ('available', models.CharField(default='1pm-2pm', max_length=255)),
            ],
        ),
    ]
